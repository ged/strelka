= Strelka Ideas

== Leash

A command-line interface to Strelka.

=== Browsing/Editing a Mongrel2 Config

Running 'leash' with no sub-commands starts it up in shell
mode:

    $ leash config.sqlite
    Opening shell for config DB: config.sqlite

Create a new server:

    config.sqlite> mkserver test
    Creating a new server (2379AA53-9688-4831-9C8B-9E70FE8A7EB7)

Show the list of Server configurations:

    config.sqlite> ls
   
    -- Servers:
    main {B5764D79-5BD5-4F43-8FCA-CBB7FD85C4EE}
    test {2379AA53-9688-4831-9C8B-9E70FE8A7EB7}
    admin {90A2890D-F386-4841-B664-5DD7FFE97C53}

Now 'cd' into one of them and show its config, and any Hosts
that live under it:
    
    config.sqlite> cd main
    config.sqlite/main> ls

    -- Server [main] {B5764D79-5BD5-4F43-8FCA-CBB7FD85C4EE}
    Name:         'Arrow Bootstrap'
    Chroot:       '/var/www'
    Access log:   '/logs/access.log'
    Error log:     '/logs/error.log'
    Default Host: 'localhost'
    PID File:     '/run/mongrel2.pid'
    Port:         3667
    
	-- Hosts:
    localhost
    deveiate /(.*).deveiate.org/

Change into one of the hosts and show it:

    config.sqlite/main> cd localhost
    config.sqlite/main/localhost> ls

	-- Host [localhost]
    
	ID: 1
	Matching Rule: /(.*).deveiate.org/
	Maintenance Mode: no

    -- Routes
    dir     /          -> /public
    dir     .png       -> /images (reverse)
    dir     .css       -> /css (reverse)
    dir     .js        -> /js (reverse)
    proxy   /proxy     -> google.com:80
    handler /admin     -> D613E7EE-E2EB-4699-A200-5C8ECAB45D5E
              tcp://127.0.0.1:9998 - tcp://127.0.0.1:9997
    handler @directory -> B7EFA46D-FEE4-432B-B80F-E8A9A2CC6FDB
              tcp://127.0.0.1:9996 - tcp://127.0.0.1:9995
    handler /directory -> B7EFA46D-FEE4-432B-B80F-E8A9A2CC6FDB
              tcp://127.0.0.1:9996 - tcp://127.0.0.1:9995

...etc...


=== Setting Up A Mongrel2 Cluster

Leash also comes with subcommands for interacting with Mongrel2. You can start
a new cluster using the 'setup' subcommand:

	server1$ leash setup 
	Creating bootstrap config...
	Starting mongrel2...
	Starting up control app...
	Okay, point a browser at http://localhost:37772/

At this point, you can either use further leash commands, or use the web
interface:

    server1$ open http://localhost:37772/



=== Join a Mongrel2 Cluster

Once you have the first node set up, you need only point 'leash' to the admin
server running on the first host to set up and automatically configure
additional Mongrel2 front-ends:

	server2$ leash join server1

This uses a 0MQ service running from the admin server that publishes the
config using Mongrel2's "config from anything" protocol currently, so when
Mongrel2 itself supports the 'zmq.so' plugin, you won't even need a local
SQLite database.



