#!/usr/bin/env ruby

require 'pp'
require 'pathname'
require 'strelka'
require 'uuidtools'

Mongrel2::Config.configure( :configdb => Strelka::DEFAULT_CONFIG_URI )


# The Strelka admin web console.
class Strelka::AdminConsole < Strelka::App

	# The 'appid' of the route to point the application at
	ID = Strelka::ADMINCONSOLE_ID

	# Load some plugins
	plugins :templating, :routing, :restresources, :filters


	# By default, responses are HTML
	default_type 'text/html'

	#
	# Templating
	#

	# Templating -- wrap everything in the layout
	layout 'layout.tmpl'
	templates \
		:console => 'admin/console.tmpl',
		:server  => 'admin/server.tmpl',
		:host    => 'admin/host.tmpl',
		:message => 'admin/message.tmpl'


	#
	# Filters
	#

	# Add some custom headers to all responses
	filter( :response ) do |res|
		Strelka.log.debug "Response is: %p, headers are: %p" % [ res, res.headers ]
		res.headers[:x_strelka_version] = Strelka.version_string( true )
	end


	#
	# Routes
	#

	### Initialize some application data.
	def initialize( * )

		# Use the templates in the same data directory as this app
		templatedir = Strelka::DATADIR + 'templates'
		Inversion::Template.configure( :template_paths => [templatedir] )

		# Commonalize all the loggers
		Mongrel2.logger = Strelka.logger
		Configurability.logger = Strelka.logger
		Inversion.logger.level = Logger::WARN

		@control = Mongrel2::Control.new( 'ipc://run/admin-control' )

		super
	end


	#
	# Custom Error Responses
	#

	# on_status 404, :missing
	# 
	# on_status 302,304, :redirect



	#
	# App Routes
	#

	# GET / -- console view
	get do |req|
		tmpl = self.template( :console )
		tmpl.request = req
		tmpl.control = @control
		tmpl.servers = Mongrel2::Config.servers

		return tmpl
	end


	#
	# Service API -- utility methods
	#


	# GET /uuid -- fetch a plain-text random UUID
	get '/uuid' do |req|
		res = req.response
		uuid = UUIDTools::UUID.random_create.to_s

		res.for( :text, :yaml, :json ) {[ uuid ]}
		res.for( :html ) do
			tmpl = self.template( :message )
			tmpl.message = uuid
			self.log.debug "Returning message template: %p" % [ tmpl ]
			tmpl
		end

		return res
	end


	#
	# Service API -- Servers
	#

	resource_prefix '/api/v1'

	# GET /servers[/:id]
	# POST /servers
	# PUT /servers/:id
	# DELETE /servers/:id
	resource Mongrel2::Config::Server
	resource Mongrel2::Config::Host
	resource Mongrel2::Config::Route
	resource Mongrel2::Config::Setting
	resource Mongrel2::Config::Filter
	resource Mongrel2::Config::Mimetype



end # class Strelka::AdminConsole


Strelka::AdminConsole.run if __FILE__ == $0

